{"mappings":"iiBAAA,IAEuBA,EAAUC,EAFjCC,EAAAC,EAAA,UAEuBH,EAeT,EAfmBC,EAehB,KAdR,IAAIG,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEL,WAAUC,UAGpBK,EAAO,CAAEN,WAAUC,S,GAEpBA,E,KAKJU,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MACjBY,EAAAX,GAASY,OAAOC,QAAQ,uBAAwCC,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,M,IAEvEgB,OAAM,SAAAL,G,IAAGZ,EAAQY,EAARZ,SAAUC,EAAKW,EAALX,MAClBY,EAAAX,GAASY,OAAOI,QAAQ,sBAAqCF,OAAfhB,EAAS,QAAYgB,OAANf,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Resolve\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["position","delay","$ejkSG","parcelRequire","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.1745a164.js.map"}