{"mappings":"qhBAAA,IAEuBA,EAAUC,EAFjCC,EAAAC,EAAA,UAEuBH,EAeT,EAfmBC,EAehB,KAdR,IAAIG,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAEFF,EAAQ,C,SAAEL,E,MAAUC,IAGpBK,EAAO,C,SAAEN,E,MAAUC,GAAQ,GAE5BA,EAAM,KAKVU,MAAK,EAACX,SAAEA,EAAQC,MAAEA,MACjBW,EAAAV,GAASW,OAAOC,QAAQ,uBAAqBd,QAAiBC,MAAU,IAEzEc,OAAM,EAACf,SAAEA,EAAQC,MAAEA,MAClBW,EAAAV,GAASW,OAAOG,QAAQ,sBAAoBhB,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Resolve\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["position","delay","$1GAPJ","parcelRequire","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.093b127c.js.map"}